## the function set and get the matrix and inverse   

makeCacheMatrix <- function(x=matrix) { 
  inv <- NULL
  set <- function(y) {
    x <<- y
    inv <<- NULL
  }
  get <- function() x
  setinverse <- function(inverse) inv <<- inverse
  getinverse <- function() inv
  list(set=set, get=get, 
       setinverse=setinverse, 
       getinverse=getinverse)
  }


## This function calculate the inverse the matrix get for fucntion makeCacheMatrrix.
## If the inverse has already been calculated, then cacheSolve should recover 
## the inverse of the cache.

cacheSolve <- function(x, ...) {
  inv <- x$getinverse()
  if(!is.null(inv)) {
  message("getting cached data.")
  return(inv)
    }
  data <- x$get()
  inv <- solve(data)
  x$setinverse(inv)
  inv
  }

## Return a matrix that is the inverse of 'x'
